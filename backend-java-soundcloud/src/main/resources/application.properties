spring.application.name=soundcloud

#config database
###
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/backendsoundcloud?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql: true
spring.jpa.properties.hibernate.format_sql: true
# Chỉ định cho Hibernate file SQL cần chạy sau khi ddl-auto hoàn tất
logging.level.org.hibernate.stat=DEBUG
###

###
#config sceret key jwt
hoidanit.jwt.base64-secret=muu7KK0Prqdt5cc1Qmq1nVtenW90x1ofWojKIMO6BLt44Unv4JcV7vsFUXsNqf1u2CqwD3jnRTaXWYaABpHVJg==
#expiration= 1day
hoidanit.jwt.access-token-validity-in-seconds=8640000
hoidanit.jwt.refresh-token-validity-in-seconds=100000
#

###
#config upload file
###
#default = 1MB
spring.servlet.multipart.max-file-size=50MB

#default = 10 MB (form data)
spring.servlet.multipart.max-request-size=50MB

##base path
hoidanit.upload-file.base-uri=file:///C:/Users/ADMIN/Desktop/IT/startnextjs-sosnu/upload
###


###
#config pagination
###start page=1
spring.data.web.pageable.one-indexed-parameters=true

###
#

###
#

###
#config email with Gmail
spring.mail.host=smtp.gmail.com
spring.mail.port=587

#thay email của bạn vào đây
spring.mail.username=nu1412sos@gmail.com

#thay app password của bạn vào đây
spring.mail.password=qtyemxxfgrlmcuiz
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

##
#####
spring.security.oauth2.client.registration.google.client-id=414850532003-hi8sqktkfg70tnjhsnkg7mudiji9ptav.apps.googleusercontent.com
##
#####
##config vnpay
vnp.TmnCode=ETQMFAW0
vnp.HashSecret=03J538U78QYJ4U482VU9BM9TEDTJ5M1B
vnp.Url=https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
vnp.ReturnUrl=http://localhost:3000/payment/result
# vnp.ReturnUrl=${VNP_RETURN_URL}
##doc tu file docker-compose.yml
vnpay.version=2.1.0
vnpay.command=pay
##
####
###
##api gemini key
# Gemini API Configuration
gemini.api.key=AIzaSyBP0cx7qA0-2dWrzSDWtIWrZl8ByOUrVkk
gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
###
##
# Thời hạn VIP (tính bằng phút, mặc định 1 phút để test)
hoidanit.vip.duration-minutes=43200
# 30 ngày (30 * 24 * 60 phút) đơn vị 43200 là phút
hoidanit.vip.check-cron=0 0 0 * * ?
# Ngày 1 mỗi tháng 0 0 0 1 * ?
#23h thứ 2 mỗi tuần 0 0 23 * * 2
# Tần suất kiểm tra hết hạn VIP (cron, mặc định mỗi phút để test)
hoidanit.endDateJob.check-cron=0 0 0 * * ?
#check 0 h hang ngay
##config redis
spring.cache.type=redis
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=123456
###
logging.level.org.springframework.cache=TRACE
logging.level.org.springframework.data.redis.cache=TRACE
# --- Cache ---
spring.cache.cache-names=role-by-id-v1,role-exists-by-name-v1
spring.cache.redis.time-to-live=3600000
##1h don vi la giay
spring.cache.redis.use-key-prefix=true
spring.cache.redis.key-prefix=jobhunter::
####
# Kafka broker
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.client-id=jobhunter

# Producer JSON
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

# Consumer JSON
spring.kafka.consumer.group-id=jobhunter-mail
spring.kafka.consumer.auto-offset-reset=earliest
# Deserializer bọc lỗi
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Delegate thật sự để decode key/value
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=vn.hoidanit.jobhunter.*
spring.kafka.consumer.properties.spring.json.value.default.type=vn.hoidanit.jobhunter.kafka.MailCommand

# Topics
app.kafka.topics.mail=mail-commands
app.kafka.topics.mail-dlt=mail-commands.DLT
# Deserializer bọc lỗi
##logging
logging.level.vn.hoidanit.jobhunter.kafka=INFO
##
#cors config
APP_CORS_ALLOWED_ORIGINS="http://localhost,https://localhost,http://localhost:3000,https://localhost:3000,http://localhost:5173,https://localhost:5173,http://localhost:4173,https://localhost:4173"
###
# --- Actuator & Prometheus ---
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.probes.enabled=true
management.metrics.tags.application=${spring.application.name}
# Bật histogram cho HTTP để nhìn phân bố latency (cơ bản):
management.metrics.distribution.percentiles-histogram.http.server.requests=true
#####
# --- Rate limit ---
app.rate-limit.enabled=true
app.rate-limit.requests-per-second=10
app.rate-limit.burst-capacity=10
app.rate-limit.apply-path=/api/**
# whitelist là danh sách, ngăn cách bởi dấu phẩy
app.rate-limit.whitelist=/actuator/**,/swagger-ui/**,/v3/api-docs/**,/ws/**,/storage/**
# Đảm bảo lấy đúng IP thật sau Nginx
server.forward-headers-strategy=framework